@startuml
actor Supervisor as Su
participant Interface as I
participant informationSheetManager as iSM
participant Student as St
database Student_DB as SDB

title = Decision Making

ref over St,Su,I,iSM,SDB : Filling the information sheet

Su <- I : displayMessage("The student " + studentID + "has completed its information sheet")
activate I
Su -> I : openValidationInterface(studentID)
I -> iSM : loadIS(studentID)
activate iSM
iSM -> SDB : load(studentID)
activate SDB
iSM <- SDB : sendInfos(studentID)
deactivate SDB
I <- iSM : generateIS(studentID)
Su <- I : displayValidationInterface(studentID)

alt  validation
  
  Su -> I : validation()
  I -> iSM : validation(studentID)
  iSM -> St : notify("Information sheet validated", studentID)

else  completion

  Su -> I : completion(message)
  I -> iSM : completion(message,studentID)
  iSM -> St : notify("Information sheet has to be completed",message,studentID)

else  refusal

  Su -> I : refusal(message)
  I -> iSM : refusal(message,studentID)
  
  iSM -> St : notify("Information sheet refused",message,studentID)
  iSM -> SDB : reinitIS(studentID)
  activate SDB
  SDB -> SDB : reinitIS(studentID)
  SDB -> iSM : updatingDone()
  deactivate SDB
  iSM -> I : reinitDone()
  deactivate iSM
  I -> Su : displayMessage("The refusal has been taken into account")
  deactivate I

end
@enduml
